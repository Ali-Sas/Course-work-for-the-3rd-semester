name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

  tests:
    needs: main
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup Node.js (Backend)
      uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Install Backend Dependencies
      run: npm install --prefix backend
    - name: Run Backend Tests (Example: Jest)
      run: npm run test --prefix backend
    - name: Setup Node.js (Frontend)
      uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Install Frontend Dependencies
      run: npm install --prefix frontend
    - name: Run Frontend Tests (Example: Jest)
      run: npm run test --prefix frontend


  build:
    needs: tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Build Backend
      run: |
        cd backend
        npm run build
    - name: Build Frontend
      run: |
        cd frontend
        npm run build
    - name: Create a single artifact for easier deployment
      run: |
        mkdir -p dist
        cp -r backend/dist dist/backend
        cp -r frontend/build dist/frontend

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Deploy to server via SSH (Example)
      uses: appleboy/ssh-action@v0.1.17
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          mkdir -p /var/www/my-app
          scp -r dist/* ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/var/www/my-app
          # Add commands to restart your server if needed.  Example for systemd:
          # systemctl restart my-app-service
